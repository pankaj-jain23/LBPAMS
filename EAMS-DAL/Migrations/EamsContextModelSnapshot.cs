// <auto-generated />
using System;
using EAMS_DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EAMS_DAL.Migrations
{
    [DbContext(typeof(EamsContext))]
    partial class EamsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EAMS_ACore.AssemblyMaster", b =>
                {
                    b.Property<int>("AssemblyMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AssemblyMasterId"));

                    b.Property<int>("AssemblyCode")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("AssemblyCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("AssemblyDeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AssemblyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AssemblyStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("AssemblyType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AssemblyUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("ElectionTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalBooths")
                        .HasColumnType("integer");

                    b.HasKey("AssemblyMasterId");

                    b.HasIndex("DistrictMasterId");

                    b.HasIndex("PCMasterId");

                    b.HasIndex("StateMasterId");

                    b.ToTable("AssemblyMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserAssembly", b =>
                {
                    b.Property<int>("UserAssemblyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserAssemblyId"));

                    b.Property<int?>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserDistrictId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserPCConstituencyId")
                        .HasColumnType("integer");

                    b.HasKey("UserAssemblyId");

                    b.HasIndex("UserDistrictId");

                    b.HasIndex("UserPCConstituencyId");

                    b.ToTable("UserAssembly", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserDistrict", b =>
                {
                    b.Property<int>("UserDistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserDistrictId"));

                    b.Property<int?>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("UserStateId")
                        .HasColumnType("integer");

                    b.HasKey("UserDistrictId");

                    b.HasIndex("UserStateId");

                    b.ToTable("UserDistrict", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserPCConstituency", b =>
                {
                    b.Property<int>("UserPCConstituencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserPCConstituencyId"));

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("UserStateId")
                        .HasColumnType("integer");

                    b.HasKey("UserPCConstituencyId");

                    b.HasIndex("UserStateId");

                    b.ToTable("UserPCConstituency", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserRegistration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("OTP")
                        .HasColumnType("text");

                    b.Property<int>("OTPAttempts")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OTPExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("OTPGeneratedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserState", b =>
                {
                    b.Property<int>("UserStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserStateId"));

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("UserStateId");

                    b.HasIndex("Id");

                    b.ToTable("UserState", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.BoothMaster", b =>
                {
                    b.Property<int>("BoothMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BoothMasterId"));

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("AssignedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AssignedOnTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("text");

                    b.Property<string>("AssignedToBLO")
                        .HasColumnType("text");

                    b.Property<string>("BoothCode_No")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("BoothCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("BoothDeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BoothName")
                        .HasColumnType("text");

                    b.Property<string>("BoothNoAuxy")
                        .HasColumnType("text");

                    b.Property<bool>("BoothStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("BoothUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("ElectionTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("Female")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAssigned")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPSOFormDone")
                        .HasColumnType("boolean");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("LocationMasterId")
                        .HasColumnType("integer");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("Male")
                        .HasColumnType("integer");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalVoters")
                        .HasColumnType("integer");

                    b.Property<int?>("Transgender")
                        .HasColumnType("integer");

                    b.HasKey("BoothMasterId");

                    b.HasIndex("AssemblyMasterId");

                    b.HasIndex("DistrictMasterId");

                    b.HasIndex("StateMasterId");

                    b.ToTable("BoothMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.DistrictMaster", b =>
                {
                    b.Property<int>("DistrictMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DistrictMasterId"));

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DistrictCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DistrictDeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("DistrictStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DistrictUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ElectionTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("DistrictMasterId");

                    b.HasIndex("StateMasterId");

                    b.ToTable("DistrictMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.EventMaster", b =>
                {
                    b.Property<int>("EventMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventMasterId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EventSequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("EventMasterId");

                    b.ToTable("EventMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.BLOModels.BLOMaster", b =>
                {
                    b.Property<int>("BLOMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BLOMasterId"));

                    b.Property<int>("AppPin")
                        .HasColumnType("integer");

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BLOCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BLOMobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BLOName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("BLOStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("BLOUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("OTP")
                        .HasColumnType("text");

                    b.Property<int>("OTPAttempts")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OTPExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("OTPGeneratedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("BLOMasterId");

                    b.ToTable("BLOMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingBasicInfoMaster", b =>
                {
                    b.Property<int>("CountingBasicInfoMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountingBasicInfoMasterId"));

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<bool>("CountingBasicInfoStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("CountingTypeMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("ElectionConductedMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfRound")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfTable")
                        .HasColumnType("integer");

                    b.Property<int?>("PcMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalBooth")
                        .HasColumnType("integer");

                    b.HasKey("CountingBasicInfoMasterId");

                    b.HasIndex("AssemblyMasterId");

                    b.HasIndex("CountingTypeMasterId");

                    b.HasIndex("DistrictMasterId");

                    b.HasIndex("ElectionConductedMasterId");

                    b.HasIndex("PcMasterId");

                    b.ToTable("CountingBasicInfoMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingLocationMaster", b =>
                {
                    b.Property<int>("LocationMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocationMasterId"));

                    b.Property<bool>("CountingLocationStatus")
                        .HasColumnType("boolean");

                    b.Property<int?>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("LocationName")
                        .HasColumnType("integer");

                    b.Property<int?>("PcMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LocationMasterId");

                    b.HasIndex("DistrictMasterId");

                    b.HasIndex("PcMasterId");

                    b.HasIndex("StateMasterId");

                    b.ToTable("CountingLocationMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingTypeMaster", b =>
                {
                    b.Property<int>("CountingTypeMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountingTypeMasterId"));

                    b.Property<DateTime?>("CountingDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("CountingStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("CountingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CountingTypeMasterId");

                    b.ToTable("CountingTypeMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingVenueMaster", b =>
                {
                    b.Property<int>("CountingVenueMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountingVenueMasterId"));

                    b.Property<string>("CountingVenue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("CountingVenueStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("LocationMasterId")
                        .HasColumnType("integer");

                    b.HasKey("CountingVenueMasterId");

                    b.HasIndex("LocationMasterId");

                    b.ToTable("CountingVenueMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.ElectionConductedMaster", b =>
                {
                    b.Property<int>("ElectionConductedMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ElectionConductedMasterId"));

                    b.Property<bool>("ElectionConductedStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("ElectionTypeMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("ElectionConductedMasterId");

                    b.HasIndex("ElectionTypeMasterId");

                    b.ToTable("ElectionConductedMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.ElectionInfoMaster", b =>
                {
                    b.Property<int>("ElectionInfoMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ElectionInfoMasterId"));

                    b.Property<string>("AROUserId")
                        .HasColumnType("text");

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("EDC")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EVMDepositedLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ElectionInfoCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ElectionInfoDeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("ElectionInfoStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ElectionInfoUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EventMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("Female")
                        .HasColumnType("integer");

                    b.Property<int?>("FinalTVote")
                        .HasColumnType("integer");

                    b.Property<bool?>("FinalTVoteStatus")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsEVMDeposited")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsMCESwitchOff")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsMockPollDone")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPartyDeparted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPartyDispatched")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPartyReached")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPartyReachedCollectionCenter")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPollEnded")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("IsPollEndedLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsPollStarted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsQueueUndo")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSetupOfPolling")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsVoterTurnOut")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("MCESwitchOffLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Male")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("MockPollDoneLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NoOfPollingAgents")
                        .HasColumnType("integer");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PartyDepartedLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PartyDispatchedLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PartyReachedCollectionCenterLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PartyReachedLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PollStartedLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SOUserId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SetupOfPollingLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("Transgender")
                        .HasColumnType("integer");

                    b.Property<int?>("VoterInQueue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("VoterInQueueLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("VotingLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("VotingTurnOutLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ElectionInfoMasterId");

                    b.ToTable("ElectionInfoMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.ElectionType.ElectionTypeMaster", b =>
                {
                    b.Property<int>("ElectionTypeMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ElectionTypeMasterId"));

                    b.Property<bool>("ElectionStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("ElectionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ElectionTypeMasterId");

                    b.ToTable("ElectionTypeMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.HelpDeskDetail", b =>
                {
                    b.Property<int>("HelpDeskMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HelpDeskMasterId"));

                    b.Property<int?>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<bool>("HelpDeskStatus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStatus")
                        .HasColumnType("boolean");

                    b.Property<int?>("LandlineNumber")
                        .HasColumnType("integer");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("HelpDeskMasterId");

                    b.ToTable("HelpDeskDetail", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.MobileVersion", b =>
                {
                    b.Property<int>("MobileVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MobileVersionId"));

                    b.Property<string>("CurrentMobileVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("MobileVersionId");

                    b.ToTable("MobileVersion", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollDetail", b =>
                {
                    b.Property<int>("PollDetailMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PollDetailMasterId"));

                    b.Property<int>("AddedBy")
                        .HasColumnType("integer");

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("EventMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("Female")
                        .HasColumnType("integer");

                    b.Property<int?>("Male")
                        .HasColumnType("integer");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("SlotManagementId")
                        .HasColumnType("integer");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("Transgender")
                        .HasColumnType("integer");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VotesPolled")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("VotesPolledRecivedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PollDetailMasterId");

                    b.ToTable("PollDetails", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollInterruption", b =>
                {
                    b.Property<int>("PollInterruptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PollInterruptionId"));

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("Flag")
                        .HasColumnType("text");

                    b.Property<int>("InterruptionType")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsPollInterrupted")
                        .HasColumnType("boolean");

                    b.Property<string>("NewBU")
                        .HasColumnType("text");

                    b.Property<string>("NewCU")
                        .HasColumnType("text");

                    b.Property<string>("OldBU")
                        .HasColumnType("text");

                    b.Property<string>("OldCU")
                        .HasColumnType("text");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<TimeOnly?>("ResumeTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly?>("StopTime")
                        .HasColumnType("time without time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserRole")
                        .HasColumnType("text");

                    b.Property<string>("UserType")
                        .HasColumnType("text");

                    b.HasKey("PollInterruptionId");

                    b.ToTable("PollInterruptions", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollInterruptionHistory", b =>
                {
                    b.Property<int>("PollInterruptionHisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PollInterruptionHisId"));

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InterruptionType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPollInterrupted")
                        .HasColumnType("boolean");

                    b.Property<string>("NewBU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NewCU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldBU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldCU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly?>("ResumeTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly?>("StopTime")
                        .HasColumnType("time without time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PollInterruptionHisId");

                    b.ToTable("PollInterruptionHistory", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollingLocationMaster", b =>
                {
                    b.Property<int>("LocationMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocationMasterId"));

                    b.Property<int?>("AssemblyMasterId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DistrictMasterId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("StateMasterId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("LocationMasterId");

                    b.ToTable("PollingLocationMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollingStationFormModels.PollingStationGender", b =>
                {
                    b.Property<int>("PollingStationGenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PollingStationGenderId"));

                    b.Property<int>("Female")
                        .HasColumnType("integer");

                    b.Property<int>("Male")
                        .HasColumnType("integer");

                    b.Property<int>("PollingStationMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("ThirdGender")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("PollingStationGenderId");

                    b.HasIndex("PollingStationMasterId");

                    b.ToTable("PollingStationGender", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollingStationFormModels.PollingStationMaster", b =>
                {
                    b.Property<int>("PollingStationMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PollingStationMasterId"));

                    b.Property<int?>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("AssemblySegmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssemblySegmentNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("ChallengedVote")
                        .HasColumnType("integer");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DummyBSB")
                        .HasColumnType("integer");

                    b.Property<bool>("EVMReplaced")
                        .HasColumnType("boolean");

                    b.Property<string>("EVMReplacementReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EVMReplacementTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Freezed")
                        .HasColumnType("boolean");

                    b.Property<int>("HearingImpaired")
                        .HasColumnType("integer");

                    b.Property<bool>("IPresidingOfficerAgree")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModelStation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWebCastingDone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWebCastingOperatorAvailable")
                        .HasColumnType("boolean");

                    b.Property<int>("LocoMotive")
                        .HasColumnType("integer");

                    b.Property<int?>("PCasterId")
                        .HasColumnType("integer");

                    b.Property<bool>("PSManagedByPwD")
                        .HasColumnType("boolean");

                    b.Property<int>("PWDDisabilityOthers")
                        .HasColumnType("integer");

                    b.Property<string>("ParliamentaryConstituencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParliamentaryConstituencyNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PinkPSIsManagedByWomen")
                        .HasColumnType("boolean");

                    b.Property<int>("PollingAgents")
                        .HasColumnType("integer");

                    b.Property<string>("PollingStationAuxy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PollingStationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PollingStationNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProxyVote")
                        .HasColumnType("integer");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TenderedVote")
                        .HasColumnType("integer");

                    b.Property<int>("TotalBUsUsed")
                        .HasColumnType("integer");

                    b.Property<int>("TotalCUsUsed")
                        .HasColumnType("integer");

                    b.Property<int>("TotalVVPATUsed")
                        .HasColumnType("integer");

                    b.Property<bool>("VVPATReplaced")
                        .HasColumnType("boolean");

                    b.Property<string>("VVPATReplacementReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VVPATReplacementTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VisuallyImpaired")
                        .HasColumnType("integer");

                    b.Property<int>("VotePolledEPIC")
                        .HasColumnType("integer");

                    b.Property<string>("VotePolledOtherDocument")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WBF")
                        .HasColumnType("integer");

                    b.Property<int>("WHC")
                        .HasColumnType("integer");

                    b.Property<string>("WebCastingMobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WebCastingName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PollingStationMasterId");

                    b.ToTable("PollingStationMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.Polling_Personal_Randomisation_Models.PPR", b =>
                {
                    b.Property<int>("PPRMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PPRMasterId"));

                    b.Property<int?>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateOfCompletedRound")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfPostponedRound")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfRound")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnType("integer");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("RandomizationTaskDetailMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("PPRMasterId");

                    b.ToTable("PPR", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.Polling_Personal_Randomization_Models.RandomizationTaskDetail", b =>
                {
                    b.Property<int>("RandomizationTaskDetailMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RandomizationTaskDetailMasterId"));

                    b.Property<int>("NumberOfRound")
                        .HasColumnType("integer");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RandomizationTaskDetailMasterId");

                    b.ToTable("RandomizationTaskDetail", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.QueueModel.QIS", b =>
                {
                    b.Property<int>("QueueMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QueueMasterId"));

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("BLOMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("BLOMobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoothCode")
                        .HasColumnType("text");

                    b.Property<int>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("QueueCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("QueueEnterDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("QueueEnterTime")
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("QueueMasterId");

                    b.ToTable("QIS", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.SectorOfficerMaster", b =>
                {
                    b.Property<int>("SOMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SOMasterId"));

                    b.Property<int>("AppPin")
                        .HasColumnType("integer");

                    b.Property<int>("ElectionTypeMasterId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("OTP")
                        .HasColumnType("text");

                    b.Property<int>("OTPAttempts")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OTPExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("OTPGeneratedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SOUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SoAssemblyCode")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SoCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SoDesignation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SoMobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SoName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SoOfficeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SoStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("SOMasterId");

                    b.ToTable("SectorOfficerMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.Models.SlotManagementMaster", b =>
                {
                    b.Property<int>("SlotManagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SlotManagementId"));

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("EventMasterId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLastSlot")
                        .HasColumnType("boolean");

                    b.Property<TimeOnly?>("LockTime")
                        .HasColumnType("time without time zone");

                    b.Property<DateTimeOffset>("SlotCreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SlotSequenceNumber")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("SlotManagementId");

                    b.ToTable("SlotManagementMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.NotificationModels.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("NotificationStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("NotificationTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NotificationId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.NotificationModels.SMSSent", b =>
                {
                    b.Property<int>("SMSSentMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SMSSentMasterId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RemarksFromGW")
                        .HasColumnType("text");

                    b.Property<int?>("SMSTemplateMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("SentToUserType")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("SMSSentMasterId");

                    b.HasIndex("SMSTemplateMasterId")
                        .IsUnique();

                    b.ToTable("SMSSent", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.NotificationModels.SMSTemplate", b =>
                {
                    b.Property<int>("SMSTemplateMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SMSTemplateMasterId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("SMSName")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("TemplateId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SMSTemplateMasterId");

                    b.ToTable("SMSTemplate", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.ParliamentConstituencyMaster", b =>
                {
                    b.Property<int>("PCMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PCMasterId"));

                    b.Property<int>("ElectionTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("PcCodeNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PcCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PcDeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PcName")
                        .HasColumnType("text");

                    b.Property<bool>("PcStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("PcType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PcUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.HasKey("PCMasterId");

                    b.HasIndex("StateMasterId");

                    b.ToTable("ParliamentConstituencyMaster", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.SignalRModels.DashboardConnectedUser", b =>
                {
                    b.Property<int>("DashboardConnectedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DashboardConnectedUserId"));

                    b.Property<int>("AssemblyMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("BoothMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DistrictMasterId")
                        .HasColumnType("integer");

                    b.Property<int>("PCMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StateMasterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UserConnectedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("DashboardConnectedUserId");

                    b.ToTable("DashboardConnectedUser", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.StateMaster", b =>
                {
                    b.Property<int>("StateMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StateMasterId"));

                    b.Property<int>("ElectionTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsGenderCapturedinVoterTurnOut")
                        .HasColumnType("boolean");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("text");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("StateCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("StateDeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("StateStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("StateUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("StateMasterId");

                    b.ToTable("StateMaster", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EAMS_ACore.AssemblyMaster", b =>
                {
                    b.HasOne("EAMS_ACore.DistrictMaster", "DistrictMaster")
                        .WithMany("AssemblyMaster")
                        .HasForeignKey("DistrictMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.ParliamentConstituencyMaster", "ParliamentConstituencyMaster")
                        .WithMany("AssemblyMaster")
                        .HasForeignKey("PCMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.StateMaster", "StateMaster")
                        .WithMany("AssemblyMaster")
                        .HasForeignKey("StateMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistrictMaster");

                    b.Navigation("ParliamentConstituencyMaster");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserAssembly", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserDistrict", "UserDistrict")
                        .WithMany("UserAssembly")
                        .HasForeignKey("UserDistrictId");

                    b.HasOne("EAMS_ACore.AuthModels.UserPCConstituency", "UserPCConstituency")
                        .WithMany("UserAssembly")
                        .HasForeignKey("UserPCConstituencyId");

                    b.Navigation("UserDistrict");

                    b.Navigation("UserPCConstituency");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserDistrict", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserState", "UserState")
                        .WithMany("UserDistrict")
                        .HasForeignKey("UserStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserState");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserPCConstituency", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserState", "UserState")
                        .WithMany("UserPCConstituency")
                        .HasForeignKey("UserStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserState");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserState", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserRegistration", "UserRegistration")
                        .WithMany("UserStates")
                        .HasForeignKey("Id");

                    b.Navigation("UserRegistration");
                });

            modelBuilder.Entity("EAMS_ACore.BoothMaster", b =>
                {
                    b.HasOne("EAMS_ACore.AssemblyMaster", "AssemblyMaster")
                        .WithMany("BoothMaster")
                        .HasForeignKey("AssemblyMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.DistrictMaster", "DistrictMaster")
                        .WithMany("BoothMaster")
                        .HasForeignKey("DistrictMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.StateMaster", "StateMaster")
                        .WithMany("BoothMaster")
                        .HasForeignKey("StateMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssemblyMaster");

                    b.Navigation("DistrictMaster");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("EAMS_ACore.DistrictMaster", b =>
                {
                    b.HasOne("EAMS_ACore.StateMaster", "StateMaster")
                        .WithMany("DistrictMasters")
                        .HasForeignKey("StateMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingBasicInfoMaster", b =>
                {
                    b.HasOne("EAMS_ACore.AssemblyMaster", "AssemblyMaster")
                        .WithMany()
                        .HasForeignKey("AssemblyMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.Models.CountingDayModels.CountingTypeMaster", "CountingTypeMaster")
                        .WithMany()
                        .HasForeignKey("CountingTypeMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.DistrictMaster", "DistrictMaster")
                        .WithMany()
                        .HasForeignKey("DistrictMasterId");

                    b.HasOne("EAMS_ACore.Models.CountingDayModels.ElectionConductedMaster", "ElectionConductedMaster")
                        .WithMany()
                        .HasForeignKey("ElectionConductedMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.ParliamentConstituencyMaster", "ParliamentConstituencyMaster")
                        .WithMany()
                        .HasForeignKey("PcMasterId");

                    b.Navigation("AssemblyMaster");

                    b.Navigation("CountingTypeMaster");

                    b.Navigation("DistrictMaster");

                    b.Navigation("ElectionConductedMaster");

                    b.Navigation("ParliamentConstituencyMaster");
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingLocationMaster", b =>
                {
                    b.HasOne("EAMS_ACore.DistrictMaster", "DistrictMaster")
                        .WithMany()
                        .HasForeignKey("DistrictMasterId");

                    b.HasOne("EAMS_ACore.ParliamentConstituencyMaster", "ParliamentConstituencyMaster")
                        .WithMany()
                        .HasForeignKey("PcMasterId");

                    b.HasOne("EAMS_ACore.StateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("StateMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistrictMaster");

                    b.Navigation("ParliamentConstituencyMaster");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.CountingVenueMaster", b =>
                {
                    b.HasOne("EAMS_ACore.Models.CountingDayModels.CountingLocationMaster", "CountingLocationMaster")
                        .WithMany()
                        .HasForeignKey("LocationMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountingLocationMaster");
                });

            modelBuilder.Entity("EAMS_ACore.Models.CountingDayModels.ElectionConductedMaster", b =>
                {
                    b.HasOne("EAMS_ACore.Models.ElectionType.ElectionTypeMaster", "ElectionTypeMaster")
                        .WithMany()
                        .HasForeignKey("ElectionTypeMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElectionTypeMaster");
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollingStationFormModels.PollingStationGender", b =>
                {
                    b.HasOne("EAMS_ACore.Models.PollingStationFormModels.PollingStationMaster", "PollingStationMaster")
                        .WithMany("PollingStationGender")
                        .HasForeignKey("PollingStationMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PollingStationMaster");
                });

            modelBuilder.Entity("EAMS_ACore.NotificationModels.SMSSent", b =>
                {
                    b.HasOne("EAMS_ACore.NotificationModels.SMSTemplate", "SMSTemplate")
                        .WithOne("SMSSent")
                        .HasForeignKey("EAMS_ACore.NotificationModels.SMSSent", "SMSTemplateMasterId");

                    b.Navigation("SMSTemplate");
                });

            modelBuilder.Entity("EAMS_ACore.ParliamentConstituencyMaster", b =>
                {
                    b.HasOne("EAMS_ACore.StateMaster", "StateMaster")
                        .WithMany("ParliamentConstituencyMaster")
                        .HasForeignKey("StateMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserRegistration", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserRegistration", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAMS_ACore.AuthModels.UserRegistration", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EAMS_ACore.AuthModels.UserRegistration", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EAMS_ACore.AssemblyMaster", b =>
                {
                    b.Navigation("BoothMaster");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserDistrict", b =>
                {
                    b.Navigation("UserAssembly");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserPCConstituency", b =>
                {
                    b.Navigation("UserAssembly");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserRegistration", b =>
                {
                    b.Navigation("UserStates");
                });

            modelBuilder.Entity("EAMS_ACore.AuthModels.UserState", b =>
                {
                    b.Navigation("UserDistrict");

                    b.Navigation("UserPCConstituency");
                });

            modelBuilder.Entity("EAMS_ACore.DistrictMaster", b =>
                {
                    b.Navigation("AssemblyMaster");

                    b.Navigation("BoothMaster");
                });

            modelBuilder.Entity("EAMS_ACore.Models.PollingStationFormModels.PollingStationMaster", b =>
                {
                    b.Navigation("PollingStationGender");
                });

            modelBuilder.Entity("EAMS_ACore.NotificationModels.SMSTemplate", b =>
                {
                    b.Navigation("SMSSent")
                        .IsRequired();
                });

            modelBuilder.Entity("EAMS_ACore.ParliamentConstituencyMaster", b =>
                {
                    b.Navigation("AssemblyMaster");
                });

            modelBuilder.Entity("EAMS_ACore.StateMaster", b =>
                {
                    b.Navigation("AssemblyMaster");

                    b.Navigation("BoothMaster");

                    b.Navigation("DistrictMasters");

                    b.Navigation("ParliamentConstituencyMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
